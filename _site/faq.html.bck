<!DOCTYPE html>
<html>

  <head>
    <meta charset='utf-8' />
    <meta http-equiv="X-UA-Compatible" content="chrome=1" />
    <meta name="description" content="Openpiv-matlab : Matlab version of the OpenPIV project (open source Particle Image Velocimetry)" />

    <link rel="stylesheet" type="text/css" media="screen" href="stylesheets/stylesheet.css">

    <title>Openpiv-matlab</title>
  </head>

  <body>

    <!-- HEADER -->
    <div id="header_wrap" class="outer">
        <header class="inner">
          <a id="forkme_banner" href="https://github.com/OpenPIV/openpiv-matlab">View on GitHub</a>

          <h1 id="project_title">Openpiv-matlab</h1>
          <h2 id="project_tagline">Matlab version of the OpenPIV project (open source Particle Image Velocimetry)</h2>

            <section id="downloads">
              <a class="zip_download_link" href="https://github.com/OpenPIV/openpiv-matlab/zipball/master">Download this project as a .zip file</a>
              <a class="tar_download_link" href="https://github.com/OpenPIV/openpiv-matlab/tarball/master">Download this project as a tar.gz file</a>
            </section>
        </header>
    </div>

    <!-- MAIN CONTENT -->
    <div id="main_content_wrap" class="outer">
      <section id="main_content" class="inner">

      <h2 id="PIVsoftwareF.A.Q.">PIV software F.A.Q.</h2>
<p>
This is a compilation of our e-mail replies on Frequently Asked Questions of our URAPIV and PyPIV users
</p>
<p>
From: <a class="mail-link" href="mailto:urapiv@gmail.com"><span class="icon">urapiv@gmail.com</span></a> URAPIV group
</p>
<p>
Subject: Re: some queries in the program
</p>
<p>
: Hello,
:
: Thanks for the quick reply. I was able to execute the program. After going
: through the program I have some queries. It would be very kind of you if you
: clear it.
:
: <strong>1)</strong> Can you please elaborate on the <strong>'sclt</strong>' parameter which is passed to the
: urapiv function.
: If the time between the two consecutive image is 0.5 seconds and 1 pixel in
: the image corresponds to 50 cms, what would be the value of sclt.
</p>
<p>
<strong>sclt</strong> is a shortcut for <strong>scaling factor from displacement to velocity units</strong>. It's also called the <strong> scale </strong>, or <strong>scaling</strong> e.g. see GUI tutorials.
</p>
<p>
PIV gives displacement in pixels, to know the displacement in your units you multiply it by the scaling of cm/pixel, i.e. by 50 cm/pixel. To know the speed, the displacement is divided by the time separation, i.e. by 0.5 seconds, then we get: 
</p>
<pre class="wiki">scaling = sclt = 50 cm/pixels / 0.5 = 100 [cm/seconds/pixels]
</pre><p>
For example, if the vector is 10 pixels, then the result will be 100 * 10 = 1000 cm/s
</p>
<p>
:
: <strong>2)</strong> If the crop vector is assigned anything other than [0 0 0 0], it gives
: the following error msg..
:
: Enter the number of interrogation lines to crop
:  [Left,Top,Right,Bottom], Enter for none    [1 1 1 1]
:  Working on 1 pixels row
: .
<strong>crop</strong> or <strong>crop_vector</strong> is a vector that includes a<strong> number of rows or columns</strong> of interrogation windows to crop from the borders of the image. For example, if I do 32 x 32 interrogation windows and I want to remove the top 100 pixels, I use 
</p>
<pre class="wiki">crop_vector = [0 3 0 0]
</pre><p>
(3 x 32 = 96 pixels). 
</p>
<p>
:
: <strong>3)</strong> Whats the purpose of the local and global filtering?
</p>
<p>
<strong>global filtering</strong> supposingly removes the obvious <strong>outliers</strong>, i.e. the vectors which length is larger than the mean of the flow field plus 3 
times its standard deviation. These are global outliers in the statistical sense.
</p>
<p>
<strong>local filtering</strong> is performed on small neighborhoods of vectors, e.g. 3 x 3 or 5 x 5, in order to find <strong>local outliers</strong> - the vectors that are dissimilar from the close neighbors. Typically there are about 5 per-cent of erroneous vectors and these are removed and later the missing values are interpolated from the neighbor vector values. This is also a reason for the Matlab version to generate three lists of files:
<strong>raw</strong> - _noflt.txt
<strong>filtered</strong> (after global and local filters) - _flt.txt
<strong>final</strong> (after filtering and interpolation) - ???.txt
</p>
<p>
:
: 4) In the cross_correlate(a2,b2.Nfft) function, why the average value of the
: pixels are subtracted from the sub image.
: a2 = a2 - mean2(a2);         %line no:303
: b2 = b2 - mean2(b2);
</p>
<p>
you have to understand the correlation principle in this case, I <br />
suggest to go for the book of Raffel et al. (1998). In one sentence, if your images <br />
have not absolutely black background (zero), then the background <br />
(which is a kind of noise) contributes to the correlation and this is <br />
undesirable. you're welcome to change it and check. maybe in some <br />
cases it is not true. I didn't find such a case.
</p>
<p>
:
: Also in the same function while taking the fft
: ffta=fft2(a2,Nfft,Nfft);            %line no:308
: fftb=fft2(b2,Nfft,Nfft);
: why the size has been specified as Nfft which is twice the interrogation
: window size.
</p>
<p>
the same remark: we do correlation analysis, this Nfft is to pad the <br />
window with zeros and get correlation map of the right size.
</p>
<p>
:
: Also in the same function why sub image b2 is rotated before taking the
: correlation.
: b2 = b2(end:-1:1,end:-1:1);         %line no:306
</p>
<p>
otherwise the result will be convolution, not correlation. the <br />
definition is ifft(fft(a)*fft(conj(b))). conj() is replaced by <br />
rotation in the case of real values. It is more computationally <br />
efficient.
</p>
<p>
:
: <br />
: 5) In the find_displacement(c,s2nm) function for finding peak2, why
: neighbourhood pixels around peak1 are removed?   %line no:352
</p>
<p>
otherwise, they appear as 'false second peak', but they are the part <br />
of the same peak. Think about a top of a mountain. You want to remove <br />
not only the single point, but cut out the top part in order to search <br />
for the second peak.
</p>
<p>
:
: 6) In the read_pair _of_images( ) function why
:   A = double(A(:,:,1))/255;           %line no:259
:   B = double(B(:,:,1))/255;
: statements are used.
</p>
<p>
to convert RGB to gray scale. Not always true. Should be verified for <br />
your images. This is a version issue. not well documented, sorry.
</p>
<p>
:
: 7) After the program is executed, the variable vel contains all the
: parameters for all the velocity vectors. Here what are the units of u &amp; v.
: Is it in metres/second?
:
</p>
<p>
it is not, it depends on your SCLT variable. if it SCLT is 1, then it <br />
is in pixels/dt (dt is the interval between two images)
</p>
      
         </section>
    </div>

    <!-- FOOTER  -->
    <div id="footer_wrap" class="outer">
      <footer class="inner">
        <p class="copyright">Openpiv-matlab maintained by <a href="https://github.com/OpenPIV">OpenPIV</a></p>
        <p>Published with <a href="http://pages.github.com">GitHub Pages</a></p>
      </footer>
    </div>

    

  </body>
</html>
