function varargout = openpivgui_export(varargin)
% OPENPIVGUI_EXPORT M-file for openpivgui_export.fig
%      OPENPIVGUI_EXPORT, by itself, creates a new OPENPIVGUI_EXPORT or raises the existing
%      singleton*.
%
%      H = OPENPIVGUI_EXPORT returns the handle to a new OPENPIVGUI_EXPORT or the handle to
%      the existing singleton*.
%
%      OPENPIVGUI_EXPORT('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in OPENPIVGUI_EXPORT.M with the given input arguments.
%
%      OPENPIVGUI_EXPORT('Property','Value',...) creates a new OPENPIVGUI_EXPORT or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before openpivgui_export_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to openpivgui_export_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help openpivgui_export

% Last Modified by GUIDE v2.5 29-May-2015 14:11:34

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
    'gui_Singleton',  gui_Singleton, ...
    'gui_OpeningFcn', @openpivgui_export_OpeningFcn, ...
    'gui_OutputFcn',  @openpivgui_export_OutputFcn, ...
    'gui_LayoutFcn',  @openpivgui_export_LayoutFcn, ...
    'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before openpivgui_export is made visible.
function openpivgui_export_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to openpivgui_export (see VARARGIN)

% Choose default command line output for openpivgui_export
handles.output = hObject;
movegui(hObject,'center');
set(hObject,'Toolbar','None');
% Update handles structure
guidata(hObject, handles);

% This sets up the initial plot - only do when we are invisible
% so window can get raised using openpiv_gui.
if strcmp(get(hObject,'Visible'),'off')
    im = load('openpiv_logo.mat');
    imshow(im.im,'Parent',findobj(hObject,'type','axes')); %handles.axes_main);
    %     text(0.05,.1,'Matlab version of OpenPIV (originally URAPIV)','FontName','Times','Fontsize',20);
    %     text(0.05,.05,'http://www.openpiv.net','FontName','Verdana','Fontsize',16,'Color','blue');
end
axis off

% UIWAIT makes openpiv_gui wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = openpivgui_export_OutputFcn(hObject, eventdata, handles)
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on button press in pushbutton1.
function pushbutton1_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on selection change in popupmenu1.
function popupmenu1_Callback(hObject, eventdata, handles)
% hObject    handle to popupmenu1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns popupmenu1 contents as cell array
%        contents{get(hObject,'Value')} returns selected item from popupmenu1


% --- Executes during object creation, after setting all properties.
function popupmenu1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to popupmenu1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on selection change in popupmenu2.
function popupmenu2_Callback(hObject, eventdata, handles)
% hObject    handle to popupmenu2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns popupmenu2 contents as cell array
%        contents{get(hObject,'Value')} returns selected item from popupmenu2


% --- Executes during object creation, after setting all properties.
function popupmenu2_CreateFcn(hObject, eventdata, handles)
% hObject    handle to popupmenu2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on selection change in popupmenu3.
function popupmenu3_Callback(hObject, eventdata, handles)
% hObject    handle to popupmenu3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns popupmenu3 contents as cell array
%        contents{get(hObject,'Value')} returns selected item from popupmenu3


% --- Executes during object creation, after setting all properties.
function popupmenu3_CreateFcn(hObject, eventdata, handles)
% hObject    handle to popupmenu3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit1_Callback(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit1 as text
%        str2double(get(hObject,'String')) returns contents of edit1 as a double


% --- Executes during object creation, after setting all properties.
function edit1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit2_Callback(hObject, eventdata, handles)
% hObject    handle to edit2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit2 as text
%        str2double(get(hObject,'String')) returns contents of edit2 as a double


% --- Executes during object creation, after setting all properties.
function edit2_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit3_Callback(hObject, eventdata, handles)
% hObject    handle to edit3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit3 as text
%        str2double(get(hObject,'String')) returns contents of edit3 as a double


% --- Executes during object creation, after setting all properties.
function edit3_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in pushbutton2.
function pushbutton2_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)



function edit4_Callback(hObject, eventdata, handles)
% hObject    handle to edit4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit4 as text
%        str2double(get(hObject,'String')) returns contents of edit4 as a double


% --- Executes during object creation, after setting all properties.
function edit4_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit5_Callback(hObject, eventdata, handles)
% hObject    handle to edit5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit5 as text
%        str2double(get(hObject,'String')) returns contents of edit5 as a double


% --- Executes during object creation, after setting all properties.
function edit5_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in pushbutton3.
function pushbutton3_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton4.
function pushbutton4_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton5.
function pushbutton5_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton6.
function pushbutton6_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton6 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on selection change in popupmenu4.
function popupmenu4_Callback(hObject, eventdata, handles)
% hObject    handle to popupmenu4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns popupmenu4 contents as cell array
%        contents{get(hObject,'Value')} returns selected item from popupmenu4


% --- Executes during object creation, after setting all properties.
function popupmenu4_CreateFcn(hObject, eventdata, handles)
% hObject    handle to popupmenu4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on selection change in popupmenu5.
function popupmenu5_Callback(hObject, eventdata, handles)
% hObject    handle to popupmenu5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns popupmenu5 contents as cell array
%        contents{get(hObject,'Value')} returns selected item from popupmenu5


% --- Executes during object creation, after setting all properties.
function popupmenu5_CreateFcn(hObject, eventdata, handles)
% hObject    handle to popupmenu5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in checkbox1.
function checkbox1_Callback(hObject, eventdata, handles)
% hObject    handle to checkbox1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of checkbox1


% --- Executes on button press in pushbutton7.
function pushbutton7_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton7 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function load_Callback(hObject, eventdata, handles)
% hObject    handle to load (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
[handles.files,handles.path] = readImDir;
% set(handles.edit_dir,'String',handles.path);
axes(handles.axes1);
set(handles.axes1,'visible','off');
set(handles.axes1,'Units','pixels');

% preprocess = get(handles.checkbox_preprocess,'Value');
% if preprocess
%     prepfun = str2func(handles.preprocess);
% else
%     prepfun = inline('imadjust(x)');
% end
% 
% try
%     % imshow(fullfile(handles.path,handles.files{1}));
%     tmp = imread(fullfile(handles.path,handles.files{1}));
%     if length(size(tmp)) == 3
%         tmp = rgb2gray(tmp);
%     end
%     imshow(prepfun(tmp));
% catch
%     tmp = tiffread2(fullfile(handles.path,handles.files{1}));
%     tmp = im2double(tmp.data);
%     imshow(prepfun(tmp));
% end

im = openpiv_imread(handles,1);
imshow(im);
set(handles.prev_image,'Visible','On');
set(handles.next_image,'Visible','On');
handles = ReadImageDirectory(handles);
% set(handles.edit_num,'string',sprintf('%d/%d',1,handles.amount));
guidata(handles.figure1, handles);


% --- Executes on button press in pushbutton_start.
function pushbutton_start_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton_start (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

set(handles.pushbutton_start,'UserData',1);

contents = get(handles.popupmenu_ittWidth,'String');
ittWidth = str2double(contents{get(handles.popupmenu_ittWidth,'Value')});

contents = get(handles.popupmenu_ittHeight,'String');
ittHeight = str2double(contents{get(handles.popupmenu_ittHeight,'Value')});

contents = get(handles.popupmenu_ovlpHor,'String');
ovlapHor = str2double(contents{get(handles.popupmenu_ovlpHor,'Value')});

contents = get(handles.popupmenu_ovlpVer,'String');
ovlapVer = str2double(contents{get(handles.popupmenu_ovlpVer,'Value')});

s2ntype = get(handles.popupmenu_s2ntype,'value');
s2nl = str2double(get(handles.edit_s2nl,'string'));
sclt = str2double(get(handles.edit_scale,'string'));
outl = str2double(get(handles.edit_outl,'string'));

preprocess = get(handles.checkbox_preprocess,'Value');
if preprocess
    if ~isfield(handles,'preprocess')
        prepfun = inline('x');
    else
        prepfun = str2func(handles.preprocess);
    end
else
    prepfun = inline('x');
end

if isfield(handles,'rect') && ~isempty(handles.rect)
    cropvec = handles.rect;
else
    cropvec = [0 0 0 0];
end
jump = str2double(get(handles.edit_jump,'string'));
if jump == -1
    jump = 0;
end

% Main loop
set(handles.figure1,'pointer','watch')


image1 = fullfile(handles.path,handles.files{1});
image2 = fullfile(handles.path,handles.files{2});
[a,b,a1,b1] = read_pair_of_images_rect(image1,image2,cropvec,ittWidth,ittHeight,ovlapHor,ovlapVer);
if isempty(a) || isempty(b)
    errordlg('Something wrong with your images')
end

switch handles.filesType
    case{'sequence'}
        
        for fileind = 1:handles.amount-jump	% main loop, for whole file list
            %      while (get(handles.pushbutton_start,'UserData') ==1)
            
            %             set(handles.edit_num,'string',sprintf('%d/%d',fileind,handles.amount-jump));
            set(handles.edit_num,'string',sprintf('%d',fileind));
            
            image1 = fullfile(handles.path,handles.files{fileind});
            image2 = fullfile(handles.path,handles.files{fileind+jump});
            
            [a,b,a1,b1,origin] = read_pair_of_images_rect(image1,image2,cropvec,ittWidth,ittHeight,ovlapHor,ovlapVer);
            
            a1 = prepfun(a1);
            b1 = prepfun(b1);
            
            
            [verSize,horSize]= size(a1);
            
            % Prepare the results storage;
            numcols = floor((horSize-ittWidth)/ovlapHor+1);
            numrows = floor((verSize-ittHeight)/ovlapVer+1);
            res = zeros(numcols*numrows,5);
            resind = 0;
            
            a2 = zeros(ittHeight,ittWidth);
            b2 = zeros(ittHeight,ittWidth);
            NfftWidth = 2*ittWidth;
            NfftHeight = 2*ittHeight;
            
            %%%%%% Start the loop for each interrogation block %%%%%%%
            axes(handles.axes1);
            % imshow(imadjust(a),[]);
            imshow(prepfun(a),[]);
            hold on
                        
            for m = 1:ovlapVer:verSize - ittHeight + 1 % vertically
                for k = 1:ovlapHor:horSize-ittWidth+1 % horizontally
                    if (get(hObject,'UserData') == 1)
                        a2 = a1(m:m+ittHeight-1,k:k+ittWidth-1);
                        b2 = b1(m:m+ittHeight-1,k:k+ittWidth-1);
                        
                        %                         a2 = prepfun(a2);
                        %                         b2 = prepfun(b2);
                        
                        c = cross_correlate_rect(a2,b2,NfftHeight,NfftWidth);
                        % c = cross_correlate_rect(a2,b2,Nfftx,Nffty);
                        if ~any(c(:)), % completely "black"
                            u = 0;
                            v = 0;
                            y = origin(2) + m + ittHeight/2 - 1;
                            x = origin(1) + k + ittWidth/2 -  1;
                            resind = resind + 1;
                            s2n = 0; 
                            res(resind,:) = [x y u v s2n];
                            continue
                        end
                        
                        [peak1,peak2,pixi,pixj] = find_displacement_rect(c,s2ntype);
                        
                        [peakVer,peakHor,s2n] = sub_pixel_velocity_rect(c,pixi,pixj,peak1,peak2,s2nl,sclt,ittWidth,ittHeight);
                        
                        % Scale the pixel displacement to the velocity
                        u = (ittWidth-peakHor)*sclt;
                        v = (ittHeight-peakVer)*sclt;
                        y = origin(2) + m + ittHeight/2-1;
                        x = origin(1) + k + ittWidth/2-1;
                        
                        resind = resind + 1;
                        res(resind,:) = [x y u v s2n];
                        % quiver(x+cropvec(1),y+cropvec(2),u,v,'y');
                        if u ~= 0 || v ~= 0
                            %                             quiver(x,y,u,v,5,'y','Linewidth',1);
                            %                             drawnow;
                            plotarrow(x,y,u,v,'g',10);
                            % drawnow
                        end
                    end
                end
            end
            
            
            
            % NO_FILT_RES will be stored in '.._noflt.txt' file at the end of program
            no_filt_res = res;
            
            % Reshape U and V matrices in two-dimensional grid and produce
            % velocity vector in U + i*V form (real and imaginary parts):
            
            u = reshape(res(:,3), numrows,numcols);
            v = reshape(res(:,4), numrows,numcols);
            vector = u + sqrt(-1)*v;
            
            % Remove outlayers - GLOBAL FILTERING
            vector(abs(vector)>mean(abs(vector(find(vector))))*outl) = 0;
            u = real(vector);
            v = imag(vector);
            
            % Adaptive Local Median filtering
            
            kernel = [-1 -1 -1; -1 8 -1; -1 -1 -1];
            tmpv = abs(conv2(v,kernel,'same'));
            tmpu = abs(conv2(u,kernel,'same'));
            
            % WE HAVE TO DECIDE WHICH LIMIT TO USE:
            % 1. Mean + 3*STD for each one separately OR
            % 2. For velocity vector length (and angle)
            % 3. OR OTHER.
            
            lmtv = mean(tmpv(find(tmpv))) + 3*std(tmpv(find(tmpv)));
            lmtu = mean(tmpu(find(tmpu))) + 3*std(tmpu(find(tmpu)));
            u_out = find(tmpu>lmtu);
            v_out = find(tmpv>lmtv);
            
            % Let's throw the outlayers out:
            u(u_out) = 0; u(v_out) = 0;
            v(v_out) = 0; v(u_out) = 0;
            vector = u + sqrt(-1)*v;
            
            res(:,3) = reshape(real(vector),numrows*numcols,1);
            res(:,4) = reshape(imag(vector),numrows*numcols,1);
            
            % Filtered results will be stored in '.._flt.txt' file
            filt_res = res;
            
            vector = fill_holes(vector,numrows,numcols);
            res(:,3) = reshape(real(vector),numrows*numcols,1);
            res(:,4) = reshape(imag(vector),numrows*numcols,1);
            
            
            % Save results as ASCII (text) files:
            % Final (filtered, interpolated) results
            % fid = fopen([dirname,filesep,filenames(fileind,1:end-4),'.txt'],'w');
            
            basename = handles.files{fileind}(1:end-4);
            
            final = fullfile(handles.path,[basename,'.txt']);
            write_openpiv_txt(final,res);
            
            % Unfiltered, uninterpolated: (comment with % sign if you don't need it)
            nofilt = fullfile(handles.path,[basename,'_noflt.txt']);
            write_openpiv_txt(nofilt,no_filt_res);
            

            % Filtered, but not interpolated:
            filtered = fullfile(handles.path,[basename,'_flt.txt']);
            write_openpiv_txt(filtered,filt_res); 
            
            
            % Results visualization
            % Only for final, filtered and interpolated data
            %    imshow(a,[]);
            %    hold on
            %             quiverm(res,2,'g','LineWidth',1);
            %             drawnow
            %    F(:,fileind) = getframe;
            hold off;
        end
    case{'pairs'}
        for fileind = 1:2:handles.amount	% main loop, for whole file list
            %      while (get(handles.pushbutton_start,'UserData') ==1)
            
            %             set(handles.edit_num,'string',sprintf('%d/%d',fileind,handles.amount));
            set(handles.edit_num,'string',sprintf('%d',fileind));
            
            image1 = fullfile(handles.path,handles.files{fileind});
            image2 = fullfile(handles.path,handles.files{fileind+1});
            
            [a,b,a1,b1,origin] = read_pair_of_images_rect(image1,image2,cropvec,ittWidth,ittHeight,ovlapHor,ovlapVer);
            
            a1 = prepfun(a1);
            b1 = prepfun(b1);
            
            [verSize,horSize]= size(a1);
            
            % Prepare the results storage;
            numcols = floor((horSize-ittWidth)/ovlapHor+1);
            numrows = floor((verSize-ittHeight)/ovlapVer+1);
            res = zeros(numcols*numrows,5);
            resind = 0;
            
            a2 = zeros(ittHeight,ittWidth);
            b2 = zeros(ittHeight,ittWidth);
            NfftWidth = 2*ittWidth;
            NfftHeight = 2*ittHeight;
            
            axes(handles.axes1);
            % imshow(imadjust(a),[]);
            imshow(prepfun(a),[]);
            hold on
            
            for m = 1:ovlapVer:verSize - ittHeight + 1 % vertically
                for k = 1:ovlapHor:horSize-ittWidth+1 % horizontally
                    % if Stop button pressed:
                    if (get(handles.pushbutton_start,'UserData') == 0)
                        return;
                    end
                    
                    a2 = a1(m:m+ittHeight-1,k:k+ittWidth-1);
                    b2 = b1(m:m+ittHeight-1,k:k+ittWidth-1);
                    
                    
                    c = cross_correlate_rect(a2,b2,NfftHeight,NfftWidth);
                    % c = cross_correlate_rect(a2,b2,Nfftx,Nffty);
                    if ~any(c(:)), % completely "black"
                        u = 0;
                        v = 0;
                        y = origin(1) + m + ittHeight/2 - 1;
                        x = origin(2) + k + ittWidth/2 -  1;
                        continue
                    end
                    
                    [peak1,peak2,pixi,pixj] = find_displacement_rect(c,s2ntype);
                    
                    [peakVer,peakHor,s2n] = sub_pixel_velocity_rect(c,pixi,pixj,peak1,peak2,s2nl,sclt,ittWidth,ittHeight);
                    
                    % Scale the pixel displacement to the velocity
                    u = (ittWidth-peakHor)*sclt;
                    v = (ittHeight-peakVer)*sclt;
                    y = origin(2) + m + ittHeight/2-1;
                    x = origin(1) + k + ittWidth/2-1;
                    
                    resind = resind + 1;
                    res(resind,:) = [x y u v s2n];
                    % quiver(x+cropvec(1),y+cropvec(2),u,v,'y');
                    if u ~= 0 || v ~= 0
                        %                             quiver(x,y,u,v,5,'y','Linewidth',1);
                        %                             drawnow;
                        plotarrow(x,y,u,v,'g',10);
                        % draw_arrow([x,y],[x+u,y+v],20)
                        % drawnow
                    end
                end
            end
            
            
            
            % NO_FILT_RES will be stored in '.._noflt.txt' file at the end of program
            no_filt_res = res;
            
            % Reshape U and V matrices in two-dimensional grid and produce
            % velocity vector in U + i*V form (real and imaginary parts):
            
            u = reshape(res(:,3), numrows,numcols);
            v = reshape(res(:,4), numrows,numcols);
            vector = u + sqrt(-1)*v;
            
            % Remove outlayers - GLOBAL FILTERING
            ind = isfinite(abs(vector)) & abs(vector) ~= 0;
            limit = mean(abs(vector(ind)))*outl;
            outliers = abs(vector) > limit;
            vector(outliers) = 0;
            u = real(vector);
            v = imag(vector);
            
            % Adaptive Local Median filtering
            kernel = [-1 -1 -1; -1 8 -1; -1 -1 -1];
            tmpv = abs(conv2(v,kernel,'same'));
            tmpu = abs(conv2(u,kernel,'same'));
            
            % WE HAVE TO DECIDE WHICH LIMIT TO USE:
            % 1. Mean + 3*STD for each one separately OR
            % 2. For velocity vector length (and angle)
            % 3. OR OTHER.
            ind = isfinite(abs(tmpv)) & abs(tmpv) ~= 0;
            lmtv = mean(tmpv(ind)) + 3*std(tmpv(ind));
            
            ind = isfinite(abs(tmpu)) & abs(tmpu) ~= 0;
            lmtu = mean(tmpu(ind)) + 3*std(tmpu(ind));
            
            u_out = find(tmpu>lmtu);
            v_out = find(tmpv>lmtv);
            
            % Let's throw the outlayers out:
            u(u_out) = 0; u(v_out) = 0;
            v(v_out) = 0; v(u_out) = 0;
            vector = u + sqrt(-1)*v;
            
            res(:,3) = reshape(real(vector),numrows*numcols,1);
            res(:,4) = reshape(imag(vector),numrows*numcols,1);
            
            % Filtered results will be stored in '.._flt.txt' file
            filt_res = res;
            
            vector = fill_holes(vector,numrows,numcols);
            res(:,3) = reshape(real(vector),numrows*numcols,1);
            res(:,4) = reshape(imag(vector),numrows*numcols,1);
            
            
            % Save results as ASCII (text) files:
            % Final (filtered, interpolated) results
            % fid = fopen([dirname,filesep,filenames(fileind,1:end-4),'.txt'],'w');
            
            fid = fopen(fullfile(handles.path,[handles.files{fileind}(1:end-4),'.txt']),'w');
            fprintf(fid,'%3d %3d %7.4f %7.4f %7.4f\n',res');
            fclose(fid);
            % Unfiltered, uninterpolated: (comment with % sign if you don't need it)
            % fid = fopen([dirname,filesep,filenames(fileind,1:end-4),'_noflt.txt'],'w');
            fid = fopen(fullfile(handles.path,[handles.files{fileind}(1:end-4),'_noflt.txt']),'w');
            fprintf(fid,'%3d %3d %7.4f %7.4f %7.4f\n',no_filt_res');
            fclose(fid);
            % Filtered, but not interpolated:
            % fid = fopen([dirname,filesep,filenames(fileind,1:end-4),'_flt.txt'],'w');
            fid = fopen(fullfile(handles.path,[handles.files{fileind}(1:end-4),'_flt.txt']),'w');
            fprintf(fid,'%3d %3d %7.4f %7.4f %7.4f\n',filt_res');
            fclose(fid);
            
            
            % Results visualization
            % Only for final, filtered and interpolated data
            %    imshow(a,[]);
            %    hold on
            %             quiverm(res,2,'g','LineWidth',1);
            %             drawnow
            %    F(:,fileind) = getframe;
            hold off;
        end
    otherwise
        ;
end
% end
set(handles.figure1,'pointer','arrow')
guidata(handles.figure1,handles);


% --- Executes on selection change in popupmenu_ittWidth.
function popupmenu_ittWidth_Callback(hObject, eventdata, handles)
% hObject    handle to popupmenu_ittWidth (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns popupmenu_ittWidth contents as cell array
%        contents{get(hObject,'Value')} returns selected item from popupmenu_ittWidth

if ispc
    set(hObject,'BackgroundColor','white');
else
    set(hObject,'BackgroundColor',get(0,'defaultUicontrolBackgroundColor'));
end
% contents = get(hObject,'String');
% handles.itt = str2double(contents{get(hObject,'Value')});
% guidata(hObject,handles);

% --- Executes during object creation, after setting all properties.
function popupmenu_ittWidth_CreateFcn(hObject, eventdata, handles)
% hObject    handle to popupmenu_ittWidth (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

% contents = get(hObject,'String');
% handles.itt = str2double(contents{get(hObject,'Value')});
% guidata(hObject,handles);


% --- Executes on selection change in popupmenu_ovlpHor.
function popupmenu_ovlpHor_Callback(hObject, eventdata, handles)
% hObject    handle to popupmenu_ovlpHor (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns popupmenu_ovlpHor contents as cell array
%        contents{get(hObject,'Value')} returns selected item from popupmenu_ovlpHor

% contents = get(hObject,'String');
% handles.spc = str2double(contents{get(hObject,'Value')});
% guidata(hObject,handles);


% --- Executes during object creation, after setting all properties.
function popupmenu_ovlpHor_CreateFcn(hObject, eventdata, handles)
% hObject    handle to popupmenu_ovlpHor (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



% --- Executes on selection change in popupmenu_s2ntype.
function popupmenu_s2ntype_Callback(hObject, eventdata, handles)
% hObject    handle to popupmenu_s2ntype (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns popupmenu_s2ntype contents as cell array
%        contents{get(hObject,'Value')} returns selected item from popupmenu_s2ntype

contents = get(hObject,'String');%  returns popupmenu_s2ntype contents as cell array
handles.s2ntype = str2double(contents{get(hObject,'Value')});% returns selected item from popupmenu_s2ntype
guidata(hObject,handles);


% --- Executes during object creation, after setting all properties.
function popupmenu_s2ntype_CreateFcn(hObject, eventdata, handles)
% hObject    handle to popupmenu_s2ntype (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

contents = get(hObject,'String');%  returns popupmenu_s2ntype contents as cell array
handles.s2ntype = str2double(contents{get(hObject,'Value')});% returns selected item from popupmenu_s2ntype
guidata(hObject,handles);


function edit_s2nl_Callback(hObject, eventdata, handles)
% hObject    handle to edit_s2nl (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_s2nl as text
%        str2double(get(hObject,'String')) returns contents of edit_s2nl as a double


% --- Executes during object creation, after setting all properties.
function edit_s2nl_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_s2nl (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end
handles.s2nl = str2double(get(hObject,'String')); % returns contents of edit_s2nl as a double
guidata(hObject,handles);


function edit_scale_Callback(hObject, eventdata, handles)
% hObject    handle to edit_scale (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_scale as text
%        str2double(get(hObject,'String')) returns contents of edit_scale as a double

handles.scale = str2double(get(hObject,'String'));% returns contents of edit_scale as a double
guidata(hObject,handles);

% --- Executes during object creation, after setting all properties.
function edit_scale_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_scale (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end
handles.scale = str2double(get(hObject,'String'));% returns contents of edit_scale as a double
guidata(hObject,handles);


function edit_outl_Callback(hObject, eventdata, handles)
% hObject    handle to edit_outl (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_outl as text
%        str2double(get(hObject,'String')) returns contents of edit_outl as a double

handles.outl = str2double(get(hObject,'String')); % returns contents of edit_outl as a double
guidata(hObject,handles);


% --- Executes during object creation, after setting all properties.
function edit_outl_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_outl (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

handles.outl = str2double(get(hObject,'String')); % returns contents of edit_outl as a double
guidata(hObject,handles);


% --- Executes on button press in pushbutton_stop.
function pushbutton_stop_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton_stop (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

selection = questdlg(['Stop ' get(handles.figure1,'Name') '?'],...
    ['Close ' get(handles.figure1,'Name') '...'],...
    'Yes','No','Yes');
if strcmp(selection,'No')
    return;
elseif strcmp(selection,'Yes')
    set(handles.pushbutton_start,'UserData',0);
    set(handles.figure1,'pointer','arrow');
end
% delete(handles.figure1)
guidata(hObject,handles);


function edit_num_Callback(hObject, eventdata, handles)
% hObject    handle to edit_num (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_num as text
%        str2double(get(hObject,'String')) returns contents of edit_num as a double


% --- Executes during object creation, after setting all properties.
function edit_num_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_num (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit_jump_Callback(hObject, eventdata, handles)
% hObject    handle to edit_jump (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_jump as text
%        str2double(get(hObject,'String')) returns contents of edit_jump as a double
handles.jump = str2double(get(hObject,'String')); % returns contents of edit_jump as a double
guidata(hObject,handles);

% --- Executes during object creation, after setting all properties.
function edit_jump_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_jump (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

handles.jump = str2double(get(hObject,'String')); % returns contents of edit_jump as a double
guidata(hObject,handles);

% --- Executes on button press in button_select.
function button_select_Callback(hObject, eventdata, handles)
% hObject    handle to button_select (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

axes(handles.axes1);
handles.rect = getrect;
rectangle('position',handles.rect,'Curvature',[0 0],'Edgecolor','yellow','Linestyle',':');
guidata(handles.figure1,handles);


% --- Executes on button press in button_reset_ROI.
function button_reset_ROI_Callback(hObject, eventdata, handles)
% hObject    handle to button_reset_ROI (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

if isfield(handles,'rect')
    handles.rect = [];
    delete(findobj(handles.axes1,'type','rectangle'))
end
guidata(handles.figure1,handles);


% --- Executes on selection change in popupmenu_ittHeight.
function popupmenu_ittHeight_Callback(hObject, eventdata, handles)
% hObject    handle to popupmenu_ittHeight (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns popupmenu_ittHeight contents as cell array
%        contents{get(hObject,'Value')} returns selected item from popupmenu_ittHeight


% --- Executes during object creation, after setting all properties.
function popupmenu_ittHeight_CreateFcn(hObject, eventdata, handles)
% hObject    handle to popupmenu_ittHeight (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on selection change in popupmenu_ovlpVer.
function popupmenu_ovlpVer_Callback(hObject, eventdata, handles)
% hObject    handle to popupmenu_ovlpVer (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns popupmenu_ovlpVer contents as cell array
%        contents{get(hObject,'Value')} returns selected item from popupmenu_ovlpVer


% --- Executes during object creation, after setting all properties.
function popupmenu_ovlpVer_CreateFcn(hObject, eventdata, handles)
% hObject    handle to popupmenu_ovlpVer (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in checkbox_preprocess.
function checkbox_preprocess_Callback(hObject, eventdata, handles)
% hObject    handle to checkbox_preprocess (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of checkbox_preprocess

if get(hObject,'Value')
    % if checked
    set(handles.pushbutton_select_preprocessor,'Enable','on');
else
    set(handles.pushbutton_select_preprocessor,'Enable','off');
end


% --- Executes on button press in pushbutton_select_preprocessor.
function pushbutton_select_preprocessor_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton_select_preprocessor (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
preprocess_mfile = uigetfile('*.m','Pick an M-file');
handles.preprocess = preprocess_mfile(1:end-2);
guidata(handles.figure1,handles);


% --- Executes on button press in prev_image.
function prev_image_Callback(hObject, eventdata, handles)
% hObject    handle to prev_image (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
axes(handles.axes1);
filenum = str2num(get(handles.edit_num,'String'));
filenum = max(1,filenum - 1);
set(handles.edit_num,'String',int2str(filenum));
% imshow(fullfile(handles.path,handles.files{1}));
imshow(openpiv_imread(handles,filenum));
guidata(hObject, handles);



% --- Executes on button press in next_image.
function next_image_Callback(hObject, eventdata, handles)
% hObject    handle to next_image (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

axes(handles.axes1);
filenum = str2num(get(handles.edit_num,'String'));
filenum = min(filenum + 1,length(handles.files));
set(handles.edit_num,'String',int2str(filenum));
imshow(openpiv_imread(handles,filenum));
guidata(hObject, handles);


% --------------------------------------------------------------------
function exit_Callback(hObject, eventdata, handles)
% hObject    handle to exit (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
selection = questdlg(['Close ' get(handles.figure1,'Name') '?'],...
    ['Close ' get(handles.figure1,'Name') '...'],...
    'Yes','No','Yes');
if strcmp(selection,'No')
    return;
end

delete(handles.figure1)


% --------------------------------------------------------------------
function file_Callback(hObject, eventdata, handles)
% hObject    handle to file (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)



% --------------------------------------------------------------------


% --- Executes during object creation, after setting all properties.
function pushbutton_start_CreateFcn(hObject, eventdata, handles)
% hObject    handle to pushbutton_start (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called
set(hObject,'UserData',1);
guidata(hObject,handles);


% --------------------------------------------------------------------
%

% --------------------------------------------------------------------
function handles = ReadImageDirectory(handles)
firstDif = find(handles.files{2}-handles.files{1},1,'first'); % how the first two files are different?
handles.filebase = handles.files{1}(1:firstDif-1); % base file name, e.g. bird_b00100
fileType = handles.files{1}(firstDif:end-4); % without extension
switch lower(fileType)
    case{'a','_a','b','_b'}
        handles.amount = length(handles.files); % pairs
        handles.filesType = 'pairs';
        handles.step = 2;
        set(handles.edit_jump,'Enable','Off');
        set(handles.edit_jump,'String','-1');
    otherwise
        handles.amount = length(handles.files);
        handles.filesType = 'sequence';
        handles.step = 1;
        set(handles.edit_jump,'Enable','On');
end

% handles.filebase = handles.files{1}(1:max(findstr(handles.files{1},'_'))-1);
guidata(handles.figure1,handles);

% --------------------------------------------------------------------



% --------------------------------------------------------------------
function help_Callback(hObject, eventdata, handles)
% hObject    handle to help (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function github_Callback(hObject, eventdata, handles)
% hObject    handle to github (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
web('http://www.openpiv.net/openpiv-matlab/', '-new');


% --------------------------------------------------------------------
function wiki_Callback(hObject, eventdata, handles)
% hObject    handle to wiki (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
web('http://www.openpiv.net/faq.html', '-new');


function im = openpiv_imread(handles,filenum)
% openpiv_imread encapsulates all the image reading functions
% that can be imread for 'jpg','bmp', etc. or 'tiffread2' for TIFF
% images from Insight (tm) 
% Usage:
% >>  im = openpiv_imread(handles,file_number);
% >>  imshow(im);

try 
    im = imread(fullfile(handles.path,handles.files{filenum}));
catch
    tmp = tiffread2(fullfile(handles.path,handles.files{filenum}));
    im = im2double(tmp.data);
end

if length(size(im)) == 3
    im = rgb2gray(im);
end

% Custom pre-processing of images, default = 'imadjust'
preprocess = get(handles.checkbox_preprocess,'Value');
if preprocess
    prepfun = str2func(handles.preprocess);
else
    prepfun = inline('imadjust(x)'); % default is to stretch the image
end
im = prepfun(im);



function edit_dt_Callback(hObject, eventdata, handles)
% hObject    handle to edit_dt (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_dt as text
%        str2double(get(hObject,'String')) returns contents of edit_dt as a double


% --- Executes during object creation, after setting all properties.
function edit_dt_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_dt (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Creates and returns a handle to the GUI figure. 
function h1 = openpivgui_export_LayoutFcn(policy)
% policy - create a new figure or use a singleton. 'new' or 'reuse'.

persistent hsingleton;
if strcmpi(policy, 'reuse') & ishandle(hsingleton)
    h1 = hsingleton;
    return;
end

appdata = [];
appdata.GUIDEOptions = struct(...
    'active_h', [], ...
    'taginfo', struct(...
    'figure', 2, ...
    'axes', 3, ...
    'frame', 5, ...
    'pushbutton', 15, ...
    'popupmenu', 11, ...
    'text', 26, ...
    'edit', 12, ...
    'checkbox', 3, ...
    'uipanel', 3), ...
    'override', 0, ...
    'release', 13, ...
    'resize', 'none', ...
    'accessibility', 'callback', ...
    'mfile', 1, ...
    'callbacks', 1, ...
    'singleton', 1, ...
    'syscolorfig', 1, ...
    'blocking', 0, ...
    'lastSavedFile', '/Users/alex/Documents/OpenPIV/openpiv-matlab/openpivgui_export.m', ...
    'lastFilename', '/Users/alex/Documents/OpenPIV/openpiv-matlab/openpivgui.fig');
appdata.lastValidTag = 'figure1';
appdata.GUIDELayoutEditor = [];
appdata.UsedByGUIData_m = struct(...
    'jump', 1, ...
    'outl', 100, ...
    'scale', 1, ...
    's2nl', 1, ...
    's2ntype', 2);
appdata.initTags = struct(...
    'handle', [], ...
    'tag', 'figure1');

h1 = figure(...
'Units','characters',...
'Color',[0.701960784313725 0.701960784313725 0.701960784313725],...
'Colormap',[0 0 0.5625;0 0 0.625;0 0 0.6875;0 0 0.75;0 0 0.8125;0 0 0.875;0 0 0.9375;0 0 1;0 0.0625 1;0 0.125 1;0 0.1875 1;0 0.25 1;0 0.3125 1;0 0.375 1;0 0.4375 1;0 0.5 1;0 0.5625 1;0 0.625 1;0 0.6875 1;0 0.75 1;0 0.8125 1;0 0.875 1;0 0.9375 1;0 1 1;0.0625 1 1;0.125 1 0.9375;0.1875 1 0.875;0.25 1 0.8125;0.3125 1 0.75;0.375 1 0.6875;0.4375 1 0.625;0.5 1 0.5625;0.5625 1 0.5;0.625 1 0.4375;0.6875 1 0.375;0.75 1 0.3125;0.8125 1 0.25;0.875 1 0.1875;0.9375 1 0.125;1 1 0.0625;1 1 0;1 0.9375 0;1 0.875 0;1 0.8125 0;1 0.75 0;1 0.6875 0;1 0.625 0;1 0.5625 0;1 0.5 0;1 0.4375 0;1 0.375 0;1 0.3125 0;1 0.25 0;1 0.1875 0;1 0.125 0;1 0.0625 0;1 0 0;0.9375 0 0;0.875 0 0;0.8125 0 0;0.75 0 0;0.6875 0 0;0.625 0 0;0.5625 0 0],...
'IntegerHandle','off',...
'InvertHardcopy',get(0,'defaultfigureInvertHardcopy'),...
'MenuBar','none',...
'Name','OpenPIV Matlab GUI (May 2015)',...
'NumberTitle','off',...
'PaperPosition',get(0,'defaultfigurePaperPosition'),...
'Position',[103.714285714286 17.8571428571429 163.285714285714 43.5714285714286],...
'Resize','off',...
'ToolBar','none',...
'CreateFcn',get(0,'defaultfigureCreateFcn'),...
'HandleVisibility','callback',...
'Tag','figure1',...
'UserData',[],...
'Visible','on');

local_CreateFcn(h1, [], '', appdata);

appdata = [];
appdata.lastValidTag = 'file';

h2 = uimenu(...
'Parent',h1,...
'Callback',@(hObject,eventdata)openpivgui_export('file_Callback',hObject,eventdata,guidata(hObject)),...
'Label','File',...
'Tag','file',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'load';

h3 = uimenu(...
'Parent',h2,...
'Accelerator','L',...
'Callback',@(hObject,eventdata)openpivgui_export('load_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Load',...
'Tag','load',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'exit';

h4 = uimenu(...
'Parent',h2,...
'Accelerator','X',...
'Callback',@(hObject,eventdata)openpivgui_export('exit_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Exit',...
'Separator','on',...
'Tag','exit',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'uipanel1';

h5 = uipanel(...
'Parent',h1,...
'Units','characters',...
'Title',blanks(0),...
'Tag','uipanel1',...
'Clipping','on',...
'Position',[110 0.5 50 42],...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'frame4';

h6 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'ListboxTop',0,...
'Position',[6.85714285714287 24.2142857142857 40.1428571428571 5.42857142857143],...
'String',{  blanks(0) },...
'Style','frame',...
'Tag','frame4',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'pushbutton_start';

h7 = uicontrol(...
'Parent',h5,...
'Units','normalized',...
'BackgroundColor',[0 0.498039215686275 0],...
'Callback',@(hObject,eventdata)openpivgui_export('pushbutton_start_Callback',hObject,eventdata,guidata(hObject)),...
'CData',[],...
'FontName','Tahoma',...
'FontSize',12,...
'FontWeight','bold',...
'ListboxTop',0,...
'Position',[0.0578034682080925 0.101221640488656 0.369942196531792 0.0506108202443281],...
'String','START',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)openpivgui_export('pushbutton_start_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'BusyAction','cancel',...
'Tag','pushbutton_start',...
'UserData',1);

appdata = [];
appdata.lastValidTag = 'popupmenu_ittWidth';

h8 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'Callback',@(hObject,eventdata)openpivgui_export('popupmenu_ittWidth_Callback',hObject,eventdata,guidata(hObject)),...
'ListboxTop',0,...
'Position',[6.99999999999998 35.7857142857143 14.4285714285714 1.85714285714286],...
'String',{  '8'; '16'; '32'; '64'; '128'; '256'; '512'; '1024' },...
'Style','popupmenu',...
'Value',3,...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)openpivgui_export('popupmenu_ittWidth_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','popupmenu_ittWidth');

appdata = [];
appdata.lastValidTag = 'popupmenu_ovlpHor';

h9 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)openpivgui_export('popupmenu_ovlpHor_Callback',hObject,eventdata,guidata(hObject)),...
'ListboxTop',0,...
'Position',[7.42857142857143 30.1428571428571 14.4285714285714 1.85714285714286],...
'String',{  '8'; '16'; '32'; '64'; '128'; '256'; '512'; '1024' },...
'Style','popupmenu',...
'Value',3,...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)openpivgui_export('popupmenu_ovlpHor_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','popupmenu_ovlpHor');

appdata = [];
appdata.lastValidTag = 'popupmenu_s2ntype';

h10 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'Callback',@(hObject,eventdata)openpivgui_export('popupmenu_s2ntype_Callback',hObject,eventdata,guidata(hObject)),...
'ListboxTop',0,...
'Position',[30.5714285714286 27 14.4285714285714 1.85714285714286],...
'String',{  '1'; '2' },...
'Style','popupmenu',...
'Value',2,...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)openpivgui_export('popupmenu_s2ntype_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','popupmenu_s2ntype');

appdata = [];
appdata.lastValidTag = 'text13';

h11 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'FontWeight','demi',...
'ListboxTop',0,...
'Position',[17.5714285714286 33.7142857142857 18.4285714285714 1.35714285714286],...
'String','Spacing/Overlap',...
'Style','text',...
'TooltipString','Each interrogation window will be separated from its neighbour by the SPACING value. Overlap of 50% is usually the default',...
'Tag','text13',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text14';

h12 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'FontWeight','demi',...
'ListboxTop',0,...
'Position',[9.85714285714285 39.0714285714286 33.4285714285714 1.14285714285714],...
'String','Interrogation window size',...
'Style','text',...
'TooltipString','Image is divided into small interrogation windows that will define the spatial resolution of the velocity vector map',...
'Tag','text14',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text15';

h13 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'FontName','Arial',...
'FontWeight','demi',...
'ListboxTop',0,...
'Position',[8.42857142857143 27.2857142857143 15 1.14285714285714],...
'String','S/N type',...
'Style','text',...
'TooltipString','Two major types of the Signal-to-Noise ratios: 1) Peak to the mean and 2) Peak to the second peak. (1 is faster)',...
'Tag','text15',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'edit_s2nl';

h14 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'Callback',@(hObject,eventdata)openpivgui_export('edit_s2nl_Callback',hObject,eventdata,guidata(hObject)),...
'ListboxTop',0,...
'Position',[30.8571428571428 25 14.1428571428571 1.64285714285714],...
'String','1',...
'Style','edit',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)openpivgui_export('edit_s2nl_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','edit_s2nl');

appdata = [];
appdata.lastValidTag = 'text16';

h15 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'FontName','Arial',...
'FontWeight','demi',...
'ListboxTop',0,...
'Position',[8.14285714285709 25.2142857142857 16.8571428571429 1.35714285714286],...
'String','S/N value',...
'Style','text',...
'TooltipString','Value that thresholds the correct/wrong vectors according to the S/N type (no default values, try-and-change)',...
'Tag','text16',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'edit_scale';

h16 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'Callback',@(hObject,eventdata)openpivgui_export('edit_scale_Callback',hObject,eventdata,guidata(hObject)),...
'ListboxTop',0,...
'Position',[30.8571428571428 22.2857142857143 14.1428571428571 1.64285714285714],...
'String','1',...
'Style','edit',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)openpivgui_export('edit_scale_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','edit_scale');

appdata = [];
appdata.lastValidTag = 'text17';

h17 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'FontName','Arial',...
'FontWeight','demi',...
'ListboxTop',0,...
'Position',[8.14285714285709 22.3571428571428 16.8571428571429 1.28571428571429],...
'String','Scale (m/pix)',...
'Style','text',...
'Tag','text17',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'edit_outl';

h18 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'Callback',@(hObject,eventdata)openpivgui_export('edit_outl_Callback',hObject,eventdata,guidata(hObject)),...
'ListboxTop',0,...
'Position',[30.5714285714286 18.0714285714286 14.8571428571429 1.35714285714286],...
'String','100',...
'Style','edit',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)openpivgui_export('edit_outl_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','edit_outl');

appdata = [];
appdata.lastValidTag = 'text18';

h19 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'FontName','Arial',...
'FontWeight','demi',...
'ListboxTop',0,...
'Position',[8.99999999999998 18.0714285714286 16 1.14285714285714],...
'String','Outlier filter',...
'Style','text',...
'Tag','text18',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'pushbutton_stop';

h20 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'BackgroundColor',[0.847058823529412 0.16078431372549 0],...
'Callback',@(hObject,eventdata)openpivgui_export('pushbutton_stop_Callback',hObject,eventdata,guidata(hObject)),...
'CData',[],...
'FontName','Tahoma',...
'FontSize',12,...
'FontWeight','bold',...
'ListboxTop',0,...
'Position',[25.5714285714286 4.14285714285714 17 2.14285714285714],...
'String','STOP',...
'Tag','pushbutton_stop',...
'UserData',[],...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'edit_num';

h21 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'Callback',@(hObject,eventdata)openpivgui_export('edit_num_Callback',hObject,eventdata,guidata(hObject)),...
'ListboxTop',0,...
'Position',[19.7142857142857 1.21428571428571 10 1.5],...
'String','1',...
'Style','edit',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)openpivgui_export('edit_num_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','edit_num');

appdata = [];
appdata.lastValidTag = 'edit_jump';

h22 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'BackgroundColor',[1 1 0.501960784313725],...
'Callback',@(hObject,eventdata)openpivgui_export('edit_jump_Callback',hObject,eventdata,guidata(hObject)),...
'ListboxTop',0,...
'Position',[31.4285714285715 15 14.8571428571429 1.35714285714286],...
'String','1',...
'Style','edit',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)openpivgui_export('edit_jump_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','edit_jump');

appdata = [];
appdata.lastValidTag = 'text19';

h23 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'FontWeight','demi',...
'ListboxTop',0,...
'Position',[9.85714285714287 15 16 1.14285714285714],...
'String','Jump',...
'Style','text',...
'TooltipString','In the sequential recording (e.g. video, high speed) JUMP defines if every second image is correlated or every JUMP (e.g. jump = 2 means image_001 and image_003 are correlated)',...
'Tag','text19',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'button_select';

h24 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'Callback',@(hObject,eventdata)openpivgui_export('button_select_Callback',hObject,eventdata,guidata(hObject)),...
'FontName','Arial',...
'FontWeight','demi',...
'Position',[2.57142857142857 10.6428571428571 19.1428571428571 2],...
'String','Select ROI',...
'TooltipString','Press to select ROI',...
'Tag','button_select',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'button_reset_ROI';

h25 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'Callback',@(hObject,eventdata)openpivgui_export('button_reset_ROI_Callback',hObject,eventdata,guidata(hObject)),...
'FontName','Arial',...
'FontWeight','demi',...
'Position',[28.2857142857143 10.5714285714286 18.5714285714286 2.21428571428571],...
'String','Reset ROI',...
'Tag','button_reset_ROI',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'popupmenu_ittHeight';

h26 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)openpivgui_export('popupmenu_ittHeight_Callback',hObject,eventdata,guidata(hObject)),...
'ListboxTop',0,...
'Position',[30.8571428571428 35.6428571428571 14.4285714285714 1.85714285714286],...
'String',{  '8'; '16'; '32'; '64'; '128'; '256'; '512'; '1024' },...
'Style','popupmenu',...
'Value',3,...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)openpivgui_export('popupmenu_ittHeight_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','popupmenu_ittHeight');

appdata = [];
appdata.lastValidTag = 'popupmenu_ovlpVer';

h27 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)openpivgui_export('popupmenu_ovlpVer_Callback',hObject,eventdata,guidata(hObject)),...
'ListboxTop',0,...
'Position',[31.8571428571428 30.2142857142857 14.4285714285714 1.85714285714286],...
'String',{  '8'; '16'; '32'; '64'; '128'; '256'; '512'; '1024' },...
'Style','popupmenu',...
'Value',3,...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)openpivgui_export('popupmenu_ovlpVer_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','popupmenu_ovlpVer');

appdata = [];
appdata.lastValidTag = 'text20';

h28 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'FontWeight','demi',...
'ListboxTop',0,...
'Position',[6.57142857142854 37.7142857142857 13.5714285714286 1.21428571428571],...
'String','Width',...
'Style','text',...
'Tag','text20',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text21';

h29 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'FontWeight','demi',...
'ListboxTop',0,...
'Position',[30 37.7142857142857 13.5714285714286 1.21428571428571],...
'String','Height',...
'Style','text',...
'Tag','text21',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text22';

h30 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'FontWeight','demi',...
'ListboxTop',0,...
'Position',[6.42857142857143 32.0714285714286 13.5714285714286 1.21428571428571],...
'String','Horizontal',...
'Style','text',...
'Tag','text22',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text23';

h31 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'FontWeight','demi',...
'ListboxTop',0,...
'Position',[32 32.2142857142857 13.5714285714286 1.21428571428571],...
'String','Vertical',...
'Style','text',...
'Tag','text23',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'checkbox_preprocess';

h32 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'Callback',@(hObject,eventdata)openpivgui_export('checkbox_preprocess_Callback',hObject,eventdata,guidata(hObject)),...
'Position',[4 7.35714285714286 17.2857142857143 1.71428571428571],...
'String','Preprocessing',...
'Style','checkbox',...
'Tag','checkbox_preprocess',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'pushbutton_select_preprocessor';

h33 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'Callback',@(hObject,eventdata)openpivgui_export('pushbutton_select_preprocessor_Callback',hObject,eventdata,guidata(hObject)),...
'Enable','off',...
'Position',[22.4285714285714 7.21428571428571 20.8571428571429 1.92857142857143],...
'String','Select preprocessor',...
'Tag','pushbutton_select_preprocessor',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'edit_dt';

h34 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'Callback',@(hObject,eventdata)openpivgui_export('edit_dt_Callback',hObject,eventdata,guidata(hObject)),...
'ListboxTop',0,...
'Position',[31.1428571428571 20.4285714285714 14.1428571428571 1.64285714285714],...
'String','1',...
'Style','edit',...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)openpivgui_export('edit_dt_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','edit_dt');

appdata = [];
appdata.lastValidTag = 'text25';

h35 = uicontrol(...
'Parent',h5,...
'Units','characters',...
'FontName','Arial',...
'FontWeight','demi',...
'ListboxTop',0,...
'Position',[8.42857142857143 20.5 16.8571428571429 1.28571428571429],...
'String','dt',...
'Style','text',...
'Tag','text25',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'uipanel2';

h36 = uipanel(...
'Parent',h1,...
'Units','characters',...
'Title',blanks(0),...
'Tag','uipanel2',...
'Clipping','on',...
'Position',[0.5 0.5 110 42],...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'axes1';

h37 = axes(...
'Parent',h36,...
'Position',[0.010443864229765 0.0471204188481675 0.980417754569191 0.961605584642234],...
'ALim',get(0,'defaultaxesALim'),...
'ALimMode','manual',...
'Box','on',...
'CameraPosition',[0.5 0.5 9.16025403784439],...
'CameraPositionMode','manual',...
'CameraTarget',[0.5 0.5 0.5],...
'CameraTargetMode','manual',...
'CameraUpVector',[0 1 0],...
'CameraUpVectorMode','manual',...
'CameraViewAngle',6.60861036031192,...
'CameraViewAngleMode','manual',...
'CLim',get(0,'defaultaxesCLim'),...
'CLimMode','manual',...
'Color',get(0,'defaultaxesColor'),...
'ColorOrder',get(0,'defaultaxesColorOrder'),...
'DataAspectRatio',get(0,'defaultaxesDataAspectRatio'),...
'DataAspectRatioMode','manual',...
'FontName','Arial',...
'FontSize',14,...
'LooseInset',[0.316353830106317 0.183472615318717 0.231181645077693 0.125094964990034],...
'TickDir',get(0,'defaultaxesTickDir'),...
'TickDirMode','manual',...
'XColor',get(0,'defaultaxesXColor'),...
'XLim',get(0,'defaultaxesXLim'),...
'XLimMode','manual',...
'XTick',[0 0.2 0.4 0.6 0.8 1],...
'XTickLabel',{  '0  '; '0.2'; '0.4'; '0.6'; '0.8'; '1  ' },...
'XTickLabelMode','manual',...
'XTickMode','manual',...
'YColor',get(0,'defaultaxesYColor'),...
'YLim',get(0,'defaultaxesYLim'),...
'YLimMode','manual',...
'YTick',[0 0.2 0.4 0.6 0.8 1],...
'YTickLabel',{  '0  '; '0.2'; '0.4'; '0.6'; '0.8'; '1  ' },...
'YTickLabelMode','manual',...
'YTickMode','manual',...
'ZColor',get(0,'defaultaxesZColor'),...
'ZLim',get(0,'defaultaxesZLim'),...
'ZLimMode','manual',...
'ZTick',[0 0.5 1],...
'ZTickLabel',blanks(0),...
'ZTickLabelMode','manual',...
'ZTickMode','manual',...
'Tag','axes1',...
'UserData',[],...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.SerializedAnnotationV7 = struct(...
    'LegendInformation', struct(...
    'IconDisplayStyle', 'on'));

h38 = get(h37,'title');

set(h38,...
'Parent',h37,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[0.498223801065719 1.01865008880995 1.00005459937205],...
'Rotation',0,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], appdata} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','on',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

appdata = [];
appdata.SerializedAnnotationV7 = struct(...
    'LegendInformation', struct(...
    'IconDisplayStyle', 'on'));

h39 = get(h37,'xlabel');

set(h39,...
'Parent',h37,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[0.498223801065719 -0.0523978685612787 1.00005459937205],...
'Rotation',0,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','cap',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], appdata} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','on',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

appdata = [];
appdata.SerializedAnnotationV7 = struct(...
    'LegendInformation', struct(...
    'IconDisplayStyle', 'on'));

h40 = get(h37,'ylabel');

set(h40,...
'Parent',h37,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[-0.0612788632326819 0.498223801065719 1.00005459937205],...
'Rotation',90,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','bottom',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], appdata} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','on',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

appdata = [];
appdata.SerializedAnnotationV7 = struct(...
    'LegendInformation', struct(...
    'IconDisplayStyle', 'on'));

h41 = get(h37,'zlabel');

set(h41,...
'Parent',h37,...
'Units','data',...
'FontUnits','points',...
'BackgroundColor','none',...
'Color',[0 0 0],...
'DisplayName',blanks(0),...
'EdgeColor','none',...
'EraseMode','normal',...
'DVIMode','auto',...
'FontAngle','normal',...
'FontName','Helvetica',...
'FontSize',10,...
'FontWeight','normal',...
'HorizontalAlignment','right',...
'LineStyle','-',...
'LineWidth',0.5,...
'Margin',2,...
'Position',[-0.192717584369449 1.01509769094139 1.00005459937205],...
'Rotation',0,...
'String',blanks(0),...
'Interpreter','tex',...
'VerticalAlignment','middle',...
'ButtonDownFcn',[],...
'CreateFcn', {@local_CreateFcn, [], appdata} ,...
'DeleteFcn',[],...
'BusyAction','queue',...
'HandleVisibility','off',...
'HelpTopicKey',blanks(0),...
'HitTest','on',...
'Interruptible','on',...
'SelectionHighlight','on',...
'Serializable','on',...
'Tag',blanks(0),...
'UserData',[],...
'Visible','off',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'IncludeRenderer','on',...
'Clipping','off');

appdata = [];
appdata.lastValidTag = 'text24';

h42 = uicontrol(...
'Parent',h36,...
'Units','characters',...
'BackgroundColor',[0.8 0.8 0.8],...
'HorizontalAlignment','left',...
'ListboxTop',0,...
'Position',[0 0 55.5714285714286 1.5],...
'String','Copyright (c) 1999-2012 OpenPIV (www.openpiv.net)',...
'Style','text',...
'Tag','text24',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'prev_image';

h43 = uicontrol(...
'Parent',h36,...
'Units','characters',...
'BackgroundColor',[0.941176470588235 0.941176470588235 0.941176470588235],...
'Callback',@(hObject,eventdata)openpivgui_export('prev_image_Callback',hObject,eventdata,guidata(hObject)),...
'FontName','Arial',...
'FontWeight','bold',...
'Position',[98.7142857142857 0 5 1.5],...
'String','<<',...
'Tag','prev_image',...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'next_image';

h44 = uicontrol(...
'Parent',h36,...
'Units','characters',...
'BackgroundColor',[0.941176470588235 0.941176470588235 0.941176470588235],...
'Callback',@(hObject,eventdata)openpivgui_export('next_image_Callback',hObject,eventdata,guidata(hObject)),...
'FontWeight','bold',...
'Position',[103.857142857143 0 5 1.5],...
'String','>>',...
'Tag','next_image',...
'Visible','off',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'help';

h45 = uimenu(...
'Parent',h1,...
'Callback',@(hObject,eventdata)openpivgui_export('help_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Help',...
'Tag','help',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'github';

h46 = uimenu(...
'Parent',h45,...
'Callback',@(hObject,eventdata)openpivgui_export('github_Callback',hObject,eventdata,guidata(hObject)),...
'Label','Website',...
'Tag','github',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'wiki';

h47 = uimenu(...
'Parent',h45,...
'Callback',@(hObject,eventdata)openpivgui_export('wiki_Callback',hObject,eventdata,guidata(hObject)),...
'Label','FAQ',...
'Tag','wiki',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h48 = uimenu(...
'Parent',h1,...
'Label','EzyFit',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h49 = uimenu(...
'Parent',h48,...
'Callback','undofit',...
'Label','Undo fit',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h50 = uimenu(...
'Parent',h48,...
'Callback','rmfit',...
'Label','Remove all fits',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h51 = uimenu(...
'Parent',h48,...
'Label','Show Fit',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h52 = uimenu(...
'Parent',h51,...
'Callback','lastfit=showfit(''cste'');',...
'Label','Constant',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h53 = uimenu(...
'Parent',h51,...
'Label','Linear',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h54 = uimenu(...
'Parent',h53,...
'Callback','lastfit=showfit(''linear'');',...
'Label','a*x',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h55 = uimenu(...
'Parent',h53,...
'Callback','lastfit=showfit(''affine'');',...
'Label','a*x+b',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h56 = uimenu(...
'Parent',h53,...
'Callback','lastfit=showfit(''affineshift'');',...
'Label','a*(x-b)',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h57 = uimenu(...
'Parent',h51,...
'Label','Polynomial',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h58 = uimenu(...
'Parent',h57,...
'Callback','lastfit=showfit(''poly1'');',...
'Label','Order 1',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h59 = uimenu(...
'Parent',h57,...
'Callback','lastfit=showfit(''poly2'');',...
'Label','Order 2',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h60 = uimenu(...
'Parent',h57,...
'Callback','lastfit=showfit(''poly3'');',...
'Label','Order 3',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h61 = uimenu(...
'Parent',h57,...
'Callback','lastfit=showfit(''poly4'');',...
'Label','Order 4',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h62 = uimenu(...
'Parent',h57,...
'Callback','lastfit=showfit(''poly5'');',...
'Label','Order 5',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h63 = uimenu(...
'Parent',h57,...
'Callback','lastfit=showfit(''poly6'');',...
'Label','Order 6',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h64 = uimenu(...
'Parent',h57,...
'Callback','lastfit=showfit(''poly'');',...
'Label','Other...',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h65 = uimenu(...
'Parent',h51,...
'Label','Exponential',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h66 = uimenu(...
'Parent',h65,...
'Callback','lastfit=showfit(''exp'');',...
'Label','a*exp(b*x)',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h67 = uimenu(...
'Parent',h65,...
'Callback','lastfit=showfit(''expc'');',...
'Label','a*exp(b*x)+c',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h68 = uimenu(...
'Parent',h65,...
'Callback','lastfit=showfit(''expdiv'');',...
'Label','a*exp(x/b)',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h69 = uimenu(...
'Parent',h65,...
'Callback','lastfit=showfit(''explim'');',...
'Label','a*(1-exp(-x/b))',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h70 = uimenu(...
'Parent',h51,...
'Label','Logarithmic',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h71 = uimenu(...
'Parent',h70,...
'Callback','lastfit=showfit(''log'');',...
'Label','a*log(b*x)',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h72 = uimenu(...
'Parent',h70,...
'Callback','lastfit=showfit(''logc'');',...
'Label','a*log(x)+b',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h73 = uimenu(...
'Parent',h51,...
'Label','Power',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h74 = uimenu(...
'Parent',h73,...
'Callback','lastfit=showfit(''power'');',...
'Label','a*x^n',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h75 = uimenu(...
'Parent',h73,...
'Callback','lastfit=showfit(''powerc'');',...
'Label','a*x^n+c',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h76 = uimenu(...
'Parent',h73,...
'Callback','lastfit=showfit(''powershift'');',...
'Label','a*(x+b)^n',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h77 = uimenu(...
'Parent',h51,...
'Label','Gaussian',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h78 = uimenu(...
'Parent',h77,...
'Callback','lastfit=showfit(''cngauss'');',...
'Label','Centered Normalized Gaussian',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h79 = uimenu(...
'Parent',h77,...
'Callback','lastfit=showfit(''cfgauss'');',...
'Label','Centered Non-normalized Gaussian',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h80 = uimenu(...
'Parent',h77,...
'Callback','lastfit=showfit(''ngauss'');',...
'Label','Non-centered Normalized Gaussian',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h81 = uimenu(...
'Parent',h77,...
'Callback','lastfit=showfit(''fgauss'');',...
'Label','Non-centered Non-normalized Gaussian',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h82 = uimenu(...
'Parent',h51,...
'Label','Oscillations',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h83 = uimenu(...
'Parent',h82,...
'Callback','lastfit=showfit(''sin'');',...
'Label','a*sin(b*x)',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h84 = uimenu(...
'Parent',h82,...
'Callback','lastfit=showfit(''cos'');',...
'Label','a*cos(b*x)',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h85 = uimenu(...
'Parent',h82,...
'Callback','lastfit=showfit(''sinc'');',...
'Label','a*sin(b*x)+c',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h86 = uimenu(...
'Parent',h82,...
'Callback','lastfit=showfit(''cosc'');',...
'Label','a*cos(b*x)+c',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h87 = uimenu(...
'Parent',h82,...
'Callback','lastfit=showfit(''sinphi'');',...
'Label','a*sin(b*x+phi)',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h88 = uimenu(...
'Parent',h82,...
'Callback','lastfit=showfit(''sinphic'');',...
'Label','a*sin(b*x+phi)+c',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h89 = uimenu(...
'Parent',h51,...
'Callback','showfit(''nearest'');',...
'Label','Nearest',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h90 = uimenu(...
'Parent',h51,...
'Callback','showfit(''spline'');',...
'Label','Spline',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h91 = uimenu(...
'Parent',h51,...
'Callback','showfit(''cubic'');',...
'Label','Cubic',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h92 = uimenu(...
'Parent',h51,...
'Callback','lastfit=showfit(''c+(x/x_0)^n'');',...
'Label','#1: myfit',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h93 = uimenu(...
'Parent',h51,...
'Callback','lastfit=showfit(''E(k)=C*k^(-n)*exp(-k/k_c); log; C=5; n=2; k_c=100'');',...
'Label','#2: fit3',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h94 = uimenu(...
'Parent',h51,...
'Callback','lastfit=showfit(''a*x+b*x^2 ; a=1 ; b=0.1'');',...
'Label','#3: test 3',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h95 = uimenu(...
'Parent',h51,...
'Callback','lastfit=showfit(''a*x+b*x^2 ; a=1 ; b=0.5'');',...
'Label','#4: fit4',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h96 = uimenu(...
'Parent',h51,...
'Callback','showfit;',...
'Label','Other...',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h97 = uimenu(...
'Parent',h48,...
'Label','Edit User Fit',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h98 = uimenu(...
'Parent',h97,...
'Callback','editfit(1)',...
'Label','#1: myfit',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h99 = uimenu(...
'Parent',h97,...
'Callback','editfit(2)',...
'Label','#2: fit3',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h100 = uimenu(...
'Parent',h97,...
'Callback','editfit(3)',...
'Label','#3: test 3',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h101 = uimenu(...
'Parent',h97,...
'Callback','editfit(4)',...
'Label','#4: fit4',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h102 = uimenu(...
'Parent',h97,...
'Callback','editfit',...
'Label','New User Fit...',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h103 = uimenu(...
'Parent',h97,...
'Callback','if strcmp(questdlg(''Are you sure you want to reset the user defined fits?'',''Reset User Fits'',''No''),''Yes''), delete(''userfit.mat''); efmenu; end',...
'Label','Reset',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h104 = uimenu(...
'Parent',h48,...
'Callback','efmenu',...
'Label','Refresh EzyFit menu',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h105 = uimenu(...
'Parent',h48,...
'Callback','editcoeff',...
'Label','Edit Fit Coefficients',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h106 = uimenu(...
'Parent',h48,...
'Callback','showresidual',...
'Label','Show Fit Residuals',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h107 = uimenu(...
'Parent',h48,...
'Accelerator','G',...
'Callback','getslope(''equation'',''dialog'')',...
'Label','Get Slope',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h108 = uimenu(...
'Parent',h48,...
'Callback','showslope([],''dialog'')',...
'Label','Show Slope...',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h109 = uimenu(...
'Parent',h48,...
'Label','Plot Sample',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h110 = uimenu(...
'Parent',h109,...
'Callback','plotsample linear',...
'Label','Linear',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h111 = uimenu(...
'Parent',h109,...
'Callback','plotsample cste',...
'Label','Constant',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h112 = uimenu(...
'Parent',h109,...
'Callback','plotsample poly2',...
'Label','3 polynomial curves',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h113 = uimenu(...
'Parent',h109,...
'Callback','plotsample osc',...
'Label','Oscillations',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h114 = uimenu(...
'Parent',h109,...
'Callback','plotsample damposc',...
'Label','Damped oscillations',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h115 = uimenu(...
'Parent',h109,...
'Callback','plotsample exp',...
'Label','Exponential decay',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h116 = uimenu(...
'Parent',h109,...
'Callback','plotsample hist',...
'Label','Histogram with one peak',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h117 = uimenu(...
'Parent',h109,...
'Callback','plotsample hist2',...
'Label','Histogram with two peaks',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h118 = uimenu(...
'Parent',h109,...
'Callback','plotsample power',...
'Label','Power law',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h119 = uimenu(...
'Parent',h109,...
'Callback','plotsample powco',...
'Label','Power law with a cutoff',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h120 = uimenu(...
'Parent',h48,...
'Label','Axis',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h121 = uimenu(...
'Parent',h120,...
'Callback','swx',...
'Label','Swap X-axis lin <-> log',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h122 = uimenu(...
'Parent',h120,...
'Callback','swy',...
'Label','Swap Y-axis lin <-> log',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h123 = uimenu(...
'Parent',h120,...
'Accelerator','B',...
'Callback','sw',...
'Label','Swap both X- and Y- axis',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h124 = uimenu(...
'Parent',h120,...
'Callback','axis0',...
'Label','Include the origin',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h125 = uimenu(...
'Parent',h120,...
'Callback','axisc',...
'Label','Center the origin',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h126 = uimenu(...
'Parent',h120,...
'Callback','axisl',...
'Label','Enlarge to nearest power of 10',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h127 = uimenu(...
'Parent',h48,...
'Callback','edit fitparam',...
'Label','Edit Default Settings...',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h128 = uimenu(...
'Parent',h48,...
'Callback','docezyfit',...
'Label','Help EzyFit',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h129 = uimenu(...
'Parent',h48,...
'Callback','checkupdate_ef(''dialog'')',...
'Label','Check for update',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h130 = uimenu(...
'Parent',h48,...
'Callback','web http://www.fast.u-psud.fr/ezyfit -browser',...
'Label','EzyFit Home Page',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h131 = uimenu(...
'Parent',h48,...
'Callback','about_ef(''dialog'')',...
'Label','About EzyFit',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h132 = uimenu(...
'Parent',h1,...
'Label','EzyFit',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h133 = uimenu(...
'Parent',h132,...
'Callback','undofit',...
'Label','Undo fit',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h134 = uimenu(...
'Parent',h132,...
'Callback','rmfit',...
'Label','Remove all fits',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h135 = uimenu(...
'Parent',h132,...
'Label','Show Fit',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h136 = uimenu(...
'Parent',h135,...
'Callback','lastfit=showfit(''cste'');',...
'Label','Constant',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h137 = uimenu(...
'Parent',h135,...
'Label','Linear',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h138 = uimenu(...
'Parent',h137,...
'Callback','lastfit=showfit(''linear'');',...
'Label','a*x',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h139 = uimenu(...
'Parent',h137,...
'Callback','lastfit=showfit(''affine'');',...
'Label','a*x+b',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h140 = uimenu(...
'Parent',h137,...
'Callback','lastfit=showfit(''affineshift'');',...
'Label','a*(x-b)',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h141 = uimenu(...
'Parent',h135,...
'Label','Polynomial',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h142 = uimenu(...
'Parent',h141,...
'Callback','lastfit=showfit(''poly1'');',...
'Label','Order 1',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h143 = uimenu(...
'Parent',h141,...
'Callback','lastfit=showfit(''poly2'');',...
'Label','Order 2',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h144 = uimenu(...
'Parent',h141,...
'Callback','lastfit=showfit(''poly3'');',...
'Label','Order 3',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h145 = uimenu(...
'Parent',h141,...
'Callback','lastfit=showfit(''poly4'');',...
'Label','Order 4',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h146 = uimenu(...
'Parent',h141,...
'Callback','lastfit=showfit(''poly5'');',...
'Label','Order 5',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h147 = uimenu(...
'Parent',h141,...
'Callback','lastfit=showfit(''poly6'');',...
'Label','Order 6',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h148 = uimenu(...
'Parent',h141,...
'Callback','lastfit=showfit(''poly'');',...
'Label','Other...',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h149 = uimenu(...
'Parent',h135,...
'Label','Exponential',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h150 = uimenu(...
'Parent',h149,...
'Callback','lastfit=showfit(''exp'');',...
'Label','a*exp(b*x)',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h151 = uimenu(...
'Parent',h149,...
'Callback','lastfit=showfit(''expc'');',...
'Label','a*exp(b*x)+c',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h152 = uimenu(...
'Parent',h149,...
'Callback','lastfit=showfit(''expdiv'');',...
'Label','a*exp(x/b)',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h153 = uimenu(...
'Parent',h149,...
'Callback','lastfit=showfit(''explim'');',...
'Label','a*(1-exp(-x/b))',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h154 = uimenu(...
'Parent',h135,...
'Label','Logarithmic',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h155 = uimenu(...
'Parent',h154,...
'Callback','lastfit=showfit(''log'');',...
'Label','a*log(b*x)',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h156 = uimenu(...
'Parent',h154,...
'Callback','lastfit=showfit(''logc'');',...
'Label','a*log(x)+b',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h157 = uimenu(...
'Parent',h135,...
'Label','Power',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h158 = uimenu(...
'Parent',h157,...
'Callback','lastfit=showfit(''power'');',...
'Label','a*x^n',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h159 = uimenu(...
'Parent',h157,...
'Callback','lastfit=showfit(''powerc'');',...
'Label','a*x^n+c',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h160 = uimenu(...
'Parent',h157,...
'Callback','lastfit=showfit(''powershift'');',...
'Label','a*(x+b)^n',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h161 = uimenu(...
'Parent',h135,...
'Label','Gaussian',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h162 = uimenu(...
'Parent',h161,...
'Callback','lastfit=showfit(''cngauss'');',...
'Label','Centered Normalized Gaussian',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h163 = uimenu(...
'Parent',h161,...
'Callback','lastfit=showfit(''cfgauss'');',...
'Label','Centered Non-normalized Gaussian',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h164 = uimenu(...
'Parent',h161,...
'Callback','lastfit=showfit(''ngauss'');',...
'Label','Non-centered Normalized Gaussian',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h165 = uimenu(...
'Parent',h161,...
'Callback','lastfit=showfit(''fgauss'');',...
'Label','Non-centered Non-normalized Gaussian',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h166 = uimenu(...
'Parent',h135,...
'Label','Oscillations',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h167 = uimenu(...
'Parent',h166,...
'Callback','lastfit=showfit(''sin'');',...
'Label','a*sin(b*x)',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h168 = uimenu(...
'Parent',h166,...
'Callback','lastfit=showfit(''cos'');',...
'Label','a*cos(b*x)',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h169 = uimenu(...
'Parent',h166,...
'Callback','lastfit=showfit(''sinc'');',...
'Label','a*sin(b*x)+c',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h170 = uimenu(...
'Parent',h166,...
'Callback','lastfit=showfit(''cosc'');',...
'Label','a*cos(b*x)+c',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h171 = uimenu(...
'Parent',h166,...
'Callback','lastfit=showfit(''sinphi'');',...
'Label','a*sin(b*x+phi)',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h172 = uimenu(...
'Parent',h166,...
'Callback','lastfit=showfit(''sinphic'');',...
'Label','a*sin(b*x+phi)+c',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h173 = uimenu(...
'Parent',h135,...
'Callback','showfit(''nearest'');',...
'Label','Nearest',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h174 = uimenu(...
'Parent',h135,...
'Callback','showfit(''spline'');',...
'Label','Spline',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h175 = uimenu(...
'Parent',h135,...
'Callback','showfit(''cubic'');',...
'Label','Cubic',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h176 = uimenu(...
'Parent',h135,...
'Callback','lastfit=showfit(''c+(x/x_0)^n'');',...
'Label','#1: myfit',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h177 = uimenu(...
'Parent',h135,...
'Callback','lastfit=showfit(''E(k)=C*k^(-n)*exp(-k/k_c); log; C=5; n=2; k_c=100'');',...
'Label','#2: fit3',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h178 = uimenu(...
'Parent',h135,...
'Callback','lastfit=showfit(''a*x+b*x^2 ; a=1 ; b=0.1'');',...
'Label','#3: test 3',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h179 = uimenu(...
'Parent',h135,...
'Callback','lastfit=showfit(''a*x+b*x^2 ; a=1 ; b=0.5'');',...
'Label','#4: fit4',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h180 = uimenu(...
'Parent',h135,...
'Callback','showfit;',...
'Label','Other...',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h181 = uimenu(...
'Parent',h132,...
'Label','Edit User Fit',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h182 = uimenu(...
'Parent',h181,...
'Callback','editfit(1)',...
'Label','#1: myfit',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h183 = uimenu(...
'Parent',h181,...
'Callback','editfit(2)',...
'Label','#2: fit3',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h184 = uimenu(...
'Parent',h181,...
'Callback','editfit(3)',...
'Label','#3: test 3',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h185 = uimenu(...
'Parent',h181,...
'Callback','editfit(4)',...
'Label','#4: fit4',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h186 = uimenu(...
'Parent',h181,...
'Callback','editfit',...
'Label','New User Fit...',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h187 = uimenu(...
'Parent',h181,...
'Callback','if strcmp(questdlg(''Are you sure you want to reset the user defined fits?'',''Reset User Fits'',''No''),''Yes''), delete(''userfit.mat''); efmenu; end',...
'Label','Reset',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h188 = uimenu(...
'Parent',h132,...
'Callback','efmenu',...
'Label','Refresh EzyFit menu',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h189 = uimenu(...
'Parent',h132,...
'Callback','editcoeff',...
'Label','Edit Fit Coefficients',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h190 = uimenu(...
'Parent',h132,...
'Callback','showresidual',...
'Label','Show Fit Residuals',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h191 = uimenu(...
'Parent',h132,...
'Accelerator','G',...
'Callback','getslope(''equation'',''dialog'')',...
'Label','Get Slope',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h192 = uimenu(...
'Parent',h132,...
'Callback','showslope([],''dialog'')',...
'Label','Show Slope...',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h193 = uimenu(...
'Parent',h132,...
'Label','Plot Sample',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h194 = uimenu(...
'Parent',h193,...
'Callback','plotsample linear',...
'Label','Linear',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h195 = uimenu(...
'Parent',h193,...
'Callback','plotsample cste',...
'Label','Constant',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h196 = uimenu(...
'Parent',h193,...
'Callback','plotsample poly2',...
'Label','3 polynomial curves',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h197 = uimenu(...
'Parent',h193,...
'Callback','plotsample osc',...
'Label','Oscillations',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h198 = uimenu(...
'Parent',h193,...
'Callback','plotsample damposc',...
'Label','Damped oscillations',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h199 = uimenu(...
'Parent',h193,...
'Callback','plotsample exp',...
'Label','Exponential decay',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h200 = uimenu(...
'Parent',h193,...
'Callback','plotsample hist',...
'Label','Histogram with one peak',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h201 = uimenu(...
'Parent',h193,...
'Callback','plotsample hist2',...
'Label','Histogram with two peaks',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h202 = uimenu(...
'Parent',h193,...
'Callback','plotsample power',...
'Label','Power law',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h203 = uimenu(...
'Parent',h193,...
'Callback','plotsample powco',...
'Label','Power law with a cutoff',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h204 = uimenu(...
'Parent',h132,...
'Label','Axis',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h205 = uimenu(...
'Parent',h204,...
'Callback','swx',...
'Label','Swap X-axis lin <-> log',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h206 = uimenu(...
'Parent',h204,...
'Callback','swy',...
'Label','Swap Y-axis lin <-> log',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h207 = uimenu(...
'Parent',h204,...
'Accelerator','B',...
'Callback','sw',...
'Label','Swap both X- and Y- axis',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h208 = uimenu(...
'Parent',h204,...
'Callback','axis0',...
'Label','Include the origin',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h209 = uimenu(...
'Parent',h204,...
'Callback','axisc',...
'Label','Center the origin',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h210 = uimenu(...
'Parent',h204,...
'Callback','axisl',...
'Label','Enlarge to nearest power of 10',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h211 = uimenu(...
'Parent',h132,...
'Callback','edit fitparam',...
'Label','Edit Default Settings...',...
'Separator','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h212 = uimenu(...
'Parent',h132,...
'Callback','docezyfit',...
'Label','Help EzyFit',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h213 = uimenu(...
'Parent',h132,...
'Callback','checkupdate_ef(''dialog'')',...
'Label','Check for update',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h214 = uimenu(...
'Parent',h132,...
'Callback','web http://www.fast.u-psud.fr/ezyfit -browser',...
'Label','EzyFit Home Page',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = blanks(0);

h215 = uimenu(...
'Parent',h132,...
'Callback','about_ef(''dialog'')',...
'Label','About EzyFit',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );


hsingleton = h1;


% --- Set application data first then calling the CreateFcn. 
function local_CreateFcn(hObject, eventdata, createfcn, appdata)

if ~isempty(appdata)
   names = fieldnames(appdata);
   for i=1:length(names)
       name = char(names(i));
       setappdata(hObject, name, getfield(appdata,name));
   end
end

if ~isempty(createfcn)
   if isa(createfcn,'function_handle')
       createfcn(hObject, eventdata);
   else
       eval(createfcn);
   end
end


% --- Handles default GUIDE GUI creation and callback dispatch
function varargout = gui_mainfcn(gui_State, varargin)

gui_StateFields =  {'gui_Name'
    'gui_Singleton'
    'gui_OpeningFcn'
    'gui_OutputFcn'
    'gui_LayoutFcn'
    'gui_Callback'};
gui_Mfile = '';
for i=1:length(gui_StateFields)
    if ~isfield(gui_State, gui_StateFields{i})
        error('MATLAB:gui_mainfcn:FieldNotFound', 'Could not find field %s in the gui_State struct in GUI M-file %s', gui_StateFields{i}, gui_Mfile);
    elseif isequal(gui_StateFields{i}, 'gui_Name')
        gui_Mfile = [gui_State.(gui_StateFields{i}), '.m'];
    end
end

numargin = length(varargin);

if numargin == 0
    % OPENPIVGUI_EXPORT
    % create the GUI only if we are not in the process of loading it
    % already
    gui_Create = true;
elseif local_isInvokeActiveXCallback(gui_State, varargin{:})
    % OPENPIVGUI_EXPORT(ACTIVEX,...)
    vin{1} = gui_State.gui_Name;
    vin{2} = [get(varargin{1}.Peer, 'Tag'), '_', varargin{end}];
    vin{3} = varargin{1};
    vin{4} = varargin{end-1};
    vin{5} = guidata(varargin{1}.Peer);
    feval(vin{:});
    return;
elseif local_isInvokeHGCallback(gui_State, varargin{:})
    % OPENPIVGUI_EXPORT('CALLBACK',hObject,eventData,handles,...)
    gui_Create = false;
else
    % OPENPIVGUI_EXPORT(...)
    % create the GUI and hand varargin to the openingfcn
    gui_Create = true;
end

if ~gui_Create
    % In design time, we need to mark all components possibly created in
    % the coming callback evaluation as non-serializable. This way, they
    % will not be brought into GUIDE and not be saved in the figure file
    % when running/saving the GUI from GUIDE.
    designEval = false;
    if (numargin>1 && ishghandle(varargin{2}))
        fig = varargin{2};
        while ~isempty(fig) && ~isa(handle(fig),'figure')
            fig = get(fig,'parent');
        end
        
        designEval = isappdata(0,'CreatingGUIDEFigure') || isprop(fig,'__GUIDEFigure');
    end
        
    if designEval
        beforeChildren = findall(fig);
    end
    
    % evaluate the callback now
    varargin{1} = gui_State.gui_Callback;
    if nargout
        [varargout{1:nargout}] = feval(varargin{:});
    else       
        feval(varargin{:});
    end
    
    % Set serializable of objects created in the above callback to off in
    % design time. Need to check whether figure handle is still valid in
    % case the figure is deleted during the callback dispatching.
    if designEval && ishandle(fig)
        set(setdiff(findall(fig),beforeChildren), 'Serializable','off');
    end
else
    if gui_State.gui_Singleton
        gui_SingletonOpt = 'reuse';
    else
        gui_SingletonOpt = 'new';
    end

    % Check user passing 'visible' P/V pair first so that its value can be
    % used by oepnfig to prevent flickering
    gui_Visible = 'auto';
    gui_VisibleInput = '';
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        % Recognize 'visible' P/V pair
        len1 = min(length('visible'),length(varargin{index}));
        len2 = min(length('off'),length(varargin{index+1}));
        if ischar(varargin{index+1}) && strncmpi(varargin{index},'visible',len1) && len2 > 1
            if strncmpi(varargin{index+1},'off',len2)
                gui_Visible = 'invisible';
                gui_VisibleInput = 'off';
            elseif strncmpi(varargin{index+1},'on',len2)
                gui_Visible = 'visible';
                gui_VisibleInput = 'on';
            end
        end
    end
    
    % Open fig file with stored settings.  Note: This executes all component
    % specific CreateFunctions with an empty HANDLES structure.

    
    % Do feval on layout code in m-file if it exists
    gui_Exported = ~isempty(gui_State.gui_LayoutFcn);
    % this application data is used to indicate the running mode of a GUIDE
    % GUI to distinguish it from the design mode of the GUI in GUIDE. it is
    % only used by actxproxy at this time.   
    setappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]),1);
    if gui_Exported
        gui_hFigure = feval(gui_State.gui_LayoutFcn, gui_SingletonOpt);

        % make figure invisible here so that the visibility of figure is
        % consistent in OpeningFcn in the exported GUI case
        if isempty(gui_VisibleInput)
            gui_VisibleInput = get(gui_hFigure,'Visible');
        end
        set(gui_hFigure,'Visible','off')

        % openfig (called by local_openfig below) does this for guis without
        % the LayoutFcn. Be sure to do it here so guis show up on screen.
        movegui(gui_hFigure,'onscreen');
    else
        gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        % If the figure has InGUIInitialization it was not completely created
        % on the last pass.  Delete this handle and try again.
        if isappdata(gui_hFigure, 'InGUIInitialization')
            delete(gui_hFigure);
            gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        end
    end
    if isappdata(0, genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]))
        rmappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]));
    end

    % Set flag to indicate starting GUI initialization
    setappdata(gui_hFigure,'InGUIInitialization',1);

    % Fetch GUIDE Application options
    gui_Options = getappdata(gui_hFigure,'GUIDEOptions');
    % Singleton setting in the GUI M-file takes priority if different
    gui_Options.singleton = gui_State.gui_Singleton;

    if ~isappdata(gui_hFigure,'GUIOnScreen')
        % Adjust background color
        if gui_Options.syscolorfig
            set(gui_hFigure,'Color', get(0,'DefaultUicontrolBackgroundColor'));
        end

        % Generate HANDLES structure and store with GUIDATA. If there is
        % user set GUI data already, keep that also.
        data = guidata(gui_hFigure);
        handles = guihandles(gui_hFigure);
        if ~isempty(handles)
            if isempty(data)
                data = handles;
            else
                names = fieldnames(handles);
                for k=1:length(names)
                    data.(char(names(k)))=handles.(char(names(k)));
                end
            end
        end
        guidata(gui_hFigure, data);
    end

    % Apply input P/V pairs other than 'visible'
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        len1 = min(length('visible'),length(varargin{index}));
        if ~strncmpi(varargin{index},'visible',len1)
            try set(gui_hFigure, varargin{index}, varargin{index+1}), catch break, end
        end
    end

    % If handle visibility is set to 'callback', turn it on until finished
    % with OpeningFcn
    gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
    if strcmp(gui_HandleVisibility, 'callback')
        set(gui_hFigure,'HandleVisibility', 'on');
    end

    feval(gui_State.gui_OpeningFcn, gui_hFigure, [], guidata(gui_hFigure), varargin{:});

    if isscalar(gui_hFigure) && ishandle(gui_hFigure)
        % Handle the default callbacks of predefined toolbar tools in this
        % GUI, if any
        guidemfile('restoreToolbarToolPredefinedCallback',gui_hFigure); 
        
        % Update handle visibility
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);

        % Call openfig again to pick up the saved visibility or apply the
        % one passed in from the P/V pairs
        if ~gui_Exported
            gui_hFigure = local_openfig(gui_State.gui_Name, 'reuse',gui_Visible);
        elseif ~isempty(gui_VisibleInput)
            set(gui_hFigure,'Visible',gui_VisibleInput);
        end
        if strcmpi(get(gui_hFigure, 'Visible'), 'on')
            figure(gui_hFigure);
            
            if gui_Options.singleton
                setappdata(gui_hFigure,'GUIOnScreen', 1);
            end
        end

        % Done with GUI initialization
        if isappdata(gui_hFigure,'InGUIInitialization')
            rmappdata(gui_hFigure,'InGUIInitialization');
        end

        % If handle visibility is set to 'callback', turn it on until
        % finished with OutputFcn
        gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
        if strcmp(gui_HandleVisibility, 'callback')
            set(gui_hFigure,'HandleVisibility', 'on');
        end
        gui_Handles = guidata(gui_hFigure);
    else
        gui_Handles = [];
    end

    if nargout
        [varargout{1:nargout}] = feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    else
        feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    end

    if isscalar(gui_hFigure) && ishandle(gui_hFigure)
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);
    end
end

function gui_hFigure = local_openfig(name, singleton, visible)

% openfig with three arguments was new from R13. Try to call that first, if
% failed, try the old openfig.
if nargin('openfig') == 2
    % OPENFIG did not accept 3rd input argument until R13,
    % toggle default figure visible to prevent the figure
    % from showing up too soon.
    gui_OldDefaultVisible = get(0,'defaultFigureVisible');
    set(0,'defaultFigureVisible','off');
    gui_hFigure = openfig(name, singleton);
    set(0,'defaultFigureVisible',gui_OldDefaultVisible);
else
    gui_hFigure = openfig(name, singleton, visible);
end

function result = local_isInvokeActiveXCallback(gui_State, varargin)

try
    result = ispc && iscom(varargin{1}) ...
             && isequal(varargin{1},gcbo);
catch
    result = false;
end

function result = local_isInvokeHGCallback(gui_State, varargin)

try
    fhandle = functions(gui_State.gui_Callback);
    result = ~isempty(findstr(gui_State.gui_Name,fhandle.file)) || ...
             (ischar(varargin{1}) ...
             && isequal(ishandle(varargin{2}), 1) ...
             && (~isempty(strfind(varargin{1},[get(varargin{2}, 'Tag'), '_'])) || ...
                ~isempty(strfind(varargin{1}, '_CreateFcn'))) );
catch
    result = false;
end


